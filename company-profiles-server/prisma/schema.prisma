generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model companies {
  id                 String               @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  company_name       String @unique
  address            String?
  industry           String?
  created_at         DateTime?            @default(now()) @db.Timestamptz(6)
  user_company_roles user_company_roles[]

  @@index([company_name], map: "idx_companies_name")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model user_company_roles {
  user_id      String    @db.Uuid
  company_id   String    @db.Uuid
  company_role String
  companies    companies @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users        users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, company_id])
}

model users {
  id                 String               @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email              String               @unique
  password_hash      String
  name               String
  global_role        String?
  created_at         DateTime?            @default(now()) @db.Timestamptz(6)
  user_company_roles user_company_roles[]

  @@index([email], map: "idx_users_email")
}
